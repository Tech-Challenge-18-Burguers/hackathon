"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.container = void 0;
const inversify_1 = require("inversify");
const types_1 = require("../types");
const Logger_1 = __importDefault(require("./logger/Logger"));
const CompressServiceImpl_1 = __importDefault(require("../application/service/CompressServiceImpl"));
const DownloadFileServiceImpl_1 = __importDefault(require("../application/service/DownloadFileServiceImpl"));
const SplitVideoFramesServiceImpl_1 = __importDefault(require("../application/service/SplitVideoFramesServiceImpl"));
const UploadFileServiceImpl_1 = __importDefault(require("../application/service/UploadFileServiceImpl"));
const VideoController_1 = __importDefault(require("../controller/VideoController"));
const AwsS3Client_1 = __importDefault(require("./aws/AwsS3Client"));
const TriggerQueueServiceImpl_1 = __importDefault(require("../application/service/TriggerQueueServiceImpl"));
const configuration_1 = require("./configuration");
const AwsSqsClient_1 = __importDefault(require("./aws/AwsSqsClient"));
const ListFilesByPrefixServiceImpl_1 = __importDefault(require("../application/service/ListFilesByPrefixServiceImpl"));
const FileController_1 = __importDefault(require("../controller/FileController"));
const CompressQueueServiceImpl_1 = __importDefault(require("../application/service/CompressQueueServiceImpl"));
const AwsDynamoDBClient_1 = __importDefault(require("./aws/AwsDynamoDBClient"));
const VideoRepositoryDynamoDB_1 = __importDefault(require("../application/repository/VideoRepositoryDynamoDB"));
const container = new inversify_1.Container();
exports.container = container;
container.bind(types_1.TYPES.Logger).toConstantValue(new Logger_1.default());
container.bind(types_1.TYPES.Configuration).toConstantValue(configuration_1.configuration);
container.bind(types_1.TYPES.S3Client).toConstantValue(new AwsS3Client_1.default());
container.bind(types_1.TYPES.SQSClient).toConstantValue(new AwsSqsClient_1.default());
container.bind(types_1.TYPES.DynamoDBClient).toConstantValue(new AwsDynamoDBClient_1.default());
container.bind(types_1.TYPES.VideoRepository).to(VideoRepositoryDynamoDB_1.default);
container.bind(types_1.TYPES.CompressService).to(CompressServiceImpl_1.default);
container.bind(types_1.TYPES.DownloadFileService).to(DownloadFileServiceImpl_1.default);
container.bind(types_1.TYPES.SplitVideoFramesService).to(SplitVideoFramesServiceImpl_1.default);
container.bind(types_1.TYPES.UploadFileService).to(UploadFileServiceImpl_1.default);
container.bind(types_1.TYPES.TriggerQueueService).to(TriggerQueueServiceImpl_1.default);
container.bind(types_1.TYPES.ListFilesByPrefixService).to(ListFilesByPrefixServiceImpl_1.default);
container.bind(types_1.TYPES.CompressQueueService).to(CompressQueueServiceImpl_1.default);
container.bind(types_1.TYPES.VideoController).to(VideoController_1.default);
container.bind(types_1.TYPES.FileController).to(FileController_1.default);
